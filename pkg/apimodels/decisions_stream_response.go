// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DecisionsStreamResponse DecisionsStreamResponse
//
// swagger:model DecisionsStreamResponse
type DecisionsStreamResponse struct {

	// deleted
	Deleted [][]*GetDecisionsResponse `json:"deleted"`

	// new
	New [][]*GetDecisionsResponse `json:"new"`
}

// Validate validates this decisions stream response
func (m *DecisionsStreamResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeleted(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNew(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DecisionsStreamResponse) validateDeleted(formats strfmt.Registry) error {

	if swag.IsZero(m.Deleted) { // not required
		return nil
	}

	for i := 0; i < len(m.Deleted); i++ {

		for ii := 0; ii < len(m.Deleted[i]); ii++ {
			if swag.IsZero(m.Deleted[i][ii]) { // not required
				continue
			}

			if m.Deleted[i][ii] != nil {
				if err := m.Deleted[i][ii].Validate(formats); err != nil {
					if ve, ok := err.(*errors.Validation); ok {
						return ve.ValidateName("deleted" + "." + strconv.Itoa(i) + "." + strconv.Itoa(ii))
					}
					return err
				}
			}

		}

	}

	return nil
}

func (m *DecisionsStreamResponse) validateNew(formats strfmt.Registry) error {

	if swag.IsZero(m.New) { // not required
		return nil
	}

	for i := 0; i < len(m.New); i++ {

		for ii := 0; ii < len(m.New[i]); ii++ {
			if swag.IsZero(m.New[i][ii]) { // not required
				continue
			}

			if m.New[i][ii] != nil {
				if err := m.New[i][ii].Validate(formats); err != nil {
					if ve, ok := err.(*errors.Validation); ok {
						return ve.ValidateName("new" + "." + strconv.Itoa(i) + "." + strconv.Itoa(ii))
					}
					return err
				}
			}

		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DecisionsStreamResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DecisionsStreamResponse) UnmarshalBinary(b []byte) error {
	var res DecisionsStreamResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
